{
  "contractName": "Token3",
  "abi": [
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token3.sol\":\"Token3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Faucet.sol\":{\"keccak256\":\"0x7e4c454bacc80290890d57e936b6bad16bc11bcf6ebd3ca80fe2492fab7f0927\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a321ee88e5972a88d375ab8a8d4af2787cbc06e1af0c25a71aa32101d1a38dd5\",\"dweb:/ipfs/QmVNv3JBEyMYNta2bmDXTjq1TCytHPk7KwJZrzTRh3X8Dj\"]},\"/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token3.sol\":{\"keccak256\":\"0xa17b7f8ef592b82620b8eef5b67f89c1b6dc53942db56843a30a96c87bc2e571\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c0a1e9af24a81f27cd4291ff1016da397cafa27c85e15cb5a215bf162c197cd9\",\"dweb:/ipfs/QmWyE3PVbB7q5nj6Uj62Df3WpKzRJgCkjKC6TedgxohXni\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101ce806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bf90610167565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600061010e602283610187565b91507f6f6e6c79206f776e65722063616e20696e766f6b652074686973206d6574686f60008301527f64210000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050818103600083015261018081610101565b9050919050565b60008282526020820190509291505056fea264697066735822122045475ec484142c3a7861a04b6daecc5cf65c3d05b5a4f64668f1557c30655b7e64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bf90610167565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600061010e602283610187565b91507f6f6e6c79206f776e65722063616e20696e766f6b652074686973206d6574686f60008301527f64210000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050818103600083015261018081610101565b9050919050565b60008282526020820190509291505056fea264697066735822122045475ec484142c3a7861a04b6daecc5cf65c3d05b5a4f64668f1557c30655b7e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:976:24",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "153:220:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "163:74:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "229:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "234:2:24",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "170:58:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:67:24"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "258:3:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "263:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:11:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "267:34:24",
                        "type": "",
                        "value": "only owner can invoke this metho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:55:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "247:55:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "328:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "319:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "319:12:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "333:4:24",
                        "type": "",
                        "value": "d!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "312:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:26:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "312:26:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "348:19:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "359:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "355:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "348:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "141:3:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "149:3:24",
                "type": ""
              }
            ],
            "src": "7:366:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "550:248:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "560:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "572:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "560:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "607:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "603:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "626:4:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "632:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "622:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "596:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:47:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "596:47:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "652:139:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "786:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "660:124:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:131:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "652:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "530:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "545:4:24",
                "type": ""
              }
            ],
            "src": "379:419:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:73:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "917:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:19:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "910:19:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "957:3:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:4:24",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:14:24"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "938:11:24"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "872:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "877:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "888:11:24",
                "type": ""
              }
            ],
            "src": "804:169:24"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"only owner can invoke this metho\")\n\n        mstore(add(pos, 32), \"d!\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n}\n",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "85:383:1:-:0;;;;;;;;;;;;;136:10:0;128:5;;:18;;;;;;;;;;;;;;;;;;85:383:1;;;;;;",
  "deployedSourceMap": "85:383:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:83:0;;;:::i;:::-;;;212:5;;;;;;;;;;198:19;;:10;:19;;;190:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;380:5:::1;::::0;::::1;;;;;;;;359:28;;;7:366:24::0;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:34;263:1;258:3;254:11;247:55;333:4;328:2;323:3;319:12;312:26;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:419::-;;583:2;572:9;568:18;560:26;;632:9;626:4;622:20;618:1;607:9;603:17;596:47;660:131;786:4;660:131;:::i;:::-;652:139;;550:248;;;:::o;804:169::-;;922:6;917:3;910:19;962:4;957:3;953:14;938:29;;900:73;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.8.0;\n\nimport './Faucet.sol';\n\ncontract Token3 is nortal {\n\n    // constructor (address _faucet) {\n    //     _faucet.call(\"withdraw\", 0.1 ether);\n    // }\n\n    // constructor (address _faucet) {\n    //     // 如果调用有问题，call方法会返回false，因此可以添加一个判断\n    //     if(_faucet.call(\"withdraw\")) {\n    //         revert(\"Withdrawal from faucet failed\");\n    //     }\n    // }\n\n}",
  "sourcePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token3.sol",
  "ast": {
    "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token3.sol",
    "exportedSymbols": {
      "Faucet": [
        94
      ],
      "Token3": [
        100
      ],
      "nortal": [
        41
      ],
      "owned": [
        25
      ]
    },
    "id": 101,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 96,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:1"
      },
      {
        "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Faucet.sol",
        "file": "./Faucet.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 95,
        "src": "61:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98,
              "name": "nortal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41,
              "src": "104:6:1"
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "104:6:1"
          }
        ],
        "contractDependencies": [
          25,
          41
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100,
          41,
          25
        ],
        "name": "Token3",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 101,
        "src": "85:383:1"
      }
    ],
    "src": "36:432:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token3.sol",
    "exportedSymbols": {
      "Faucet": [
        94
      ],
      "Token3": [
        100
      ],
      "nortal": [
        41
      ],
      "owned": [
        25
      ]
    },
    "id": 101,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 96,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:1"
      },
      {
        "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Faucet.sol",
        "file": "./Faucet.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 95,
        "src": "61:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98,
              "name": "nortal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41,
              "src": "104:6:1"
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "104:6:1"
          }
        ],
        "contractDependencies": [
          25,
          41
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100,
          41,
          25
        ],
        "name": "Token3",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 101,
        "src": "85:383:1"
      }
    ],
    "src": "36:432:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-30T07:15:35.910Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}