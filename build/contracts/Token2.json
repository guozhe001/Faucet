{
  "contractName": "Token2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_f",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_f\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token2.sol\":\"Token2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Faucet.sol\":{\"keccak256\":\"0x7e4c454bacc80290890d57e936b6bad16bc11bcf6ebd3ca80fe2492fab7f0927\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a321ee88e5972a88d375ab8a8d4af2787cbc06e1af0c25a71aa32101d1a38dd5\",\"dweb:/ipfs/QmVNv3JBEyMYNta2bmDXTjq1TCytHPk7KwJZrzTRh3X8Dj\"]},\"/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token2.sol\":{\"keccak256\":\"0x1498566f6c3688f51aad64efbbbf5e2dc298fd5ce29ce524c9548a9958de7be2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0022202e4f278b8d0101bbd6ffbbf454a98a4dac7bf2a7146d4e45f2a7b6abfd\",\"dweb:/ipfs/QmZw6Fg1vzH8Xk1gpcR75ZJZegXR4j6BANR8Viqi7i8MzD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103f83803806103f883398181016040528101906100329190610163565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d67016345785d8a00006040518263ffffffff1660e01b8152600401610116919061019b565b600060405180830381600087803b15801561013057600080fd5b505af1158015610144573d6000803e3d6000fd5b505050505061021b565b60008151905061015d81610204565b92915050565b60006020828403121561017557600080fd5b60006101838482850161014e565b91505092915050565b610195816101f2565b82525050565b60006020820190506101b0600083018461018c565b92915050565b60006101c1826101c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101fd826101e8565b9050919050565b61020d816101b6565b811461021857600080fd5b50565b6101ce8061022a6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bf90610167565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600061010e602283610187565b91507f6f6e6c79206f776e65722063616e20696e766f6b652074686973206d6574686f60008301527f64210000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050818103600083015261018081610101565b9050919050565b60008282526020820190509291505056fea26469706673582212202022279064e3290868165b334a793bde0a4f3853a73285f866adff0c2bc30e5f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806383197ef014610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bf90610167565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600061010e602283610187565b91507f6f6e6c79206f776e65722063616e20696e766f6b652074686973206d6574686f60008301527f64210000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000602082019050818103600083015261018081610101565b9050919050565b60008282526020820190509291505056fea26469706673582212202022279064e3290868165b334a793bde0a4f3853a73285f866adff0c2bc30e5f64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1497:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:27"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:27",
                "type": ""
              }
            ],
            "src": "7:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:27",
                "type": ""
              }
            ],
            "src": "156:284:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "536:91:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "553:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "614:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_100000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "558:55:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:62:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "546:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "546:75:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "546:75:27"
                }
              ]
            },
            "name": "abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "524:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "531:3:27",
                "type": ""
              }
            ],
            "src": "446:181:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:149:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "766:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "778:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "789:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "774:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "766:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "871:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "884:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "895:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "880:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "880:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "802:68:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "802:96:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "802:96:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_100000000000000000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "728:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "740:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "751:4:27",
                "type": ""
              }
            ],
            "src": "633:272:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:51:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "966:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "995:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "977:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "977:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "966:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "938:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "948:7:27",
                "type": ""
              }
            ],
            "src": "911:96:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1058:81:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1068:65:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1083:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:42:27",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1079:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:54:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1068:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1040:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1050:7:27",
                "type": ""
              }
            ],
            "src": "1013:126:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1190:32:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1200:16:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1211:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1200:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1172:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1182:7:27",
                "type": ""
              }
            ],
            "src": "1145:77:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:53:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1323:37:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1354:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1336:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1336:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1323:9:27"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_100000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1293:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1303:9:27",
                "type": ""
              }
            ],
            "src": "1228:138:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1415:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1472:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1481:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1484:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1474:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1474:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1474:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1438:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1463:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1445:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1445:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1435:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1425:2:27"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1408:5:27",
                "type": ""
              }
            ],
            "src": "1372:122:27"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_100000000000000000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_100000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:976:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "153:220:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "163:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "229:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "234:2:27",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "170:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "258:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "263:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "267:34:27",
                        "type": "",
                        "value": "only owner can invoke this metho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "247:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "328:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "319:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "319:12:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "333:4:27",
                        "type": "",
                        "value": "d!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "312:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:26:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "312:26:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "348:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "359:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "355:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "348:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "141:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "149:3:27",
                "type": ""
              }
            ],
            "src": "7:366:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "550:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "560:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "572:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "560:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "607:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "603:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "626:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "632:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "622:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "596:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "596:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "652:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "786:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "660:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "652:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "530:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "545:4:27",
                "type": ""
              }
            ],
            "src": "379:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:73:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "917:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:19:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "910:19:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "957:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:4:27",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:14:27"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "938:11:27"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "872:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "877:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "888:11:27",
                "type": ""
              }
            ],
            "src": "804:169:27"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"only owner can invoke this metho\")\n\n        mstore(add(pos, 32), \"d!\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59d8285253f2107f3cfc22753116c5afe952b74e76f87d8d824cda5ba24ebb67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "85:485:3:-:0;;;460:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;136:10:1;128:5;;:18;;;;;;;;;;;;;;;;;;519:2:3;494:7;;:29;;;;;;;;;;;;;;;;;;533:7;;;;;;;;;;;:16;;;550:9;533:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:107;85:485;;7:143:27;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:181::-;558:62;614:5;558:62;:::i;:::-;553:3;546:75;536:91;;:::o;633:272::-;;789:2;778:9;774:18;766:26;;802:96;895:1;884:9;880:17;871:6;802:96;:::i;:::-;756:149;;;;:::o;911:96::-;;977:24;995:5;977:24;:::i;:::-;966:35;;956:51;;;:::o;1013:126::-;;1090:42;1083:5;1079:54;1068:65;;1058:81;;;:::o;1145:77::-;;1211:5;1200:16;;1190:32;;;:::o;1228:138::-;;1336:24;1354:5;1336:24;:::i;:::-;1323:37;;1313:53;;;:::o;1372:122::-;1445:24;1463:5;1445:24;:::i;:::-;1438:5;1435:35;1425:2;;1484:1;1481;1474:12;1425:2;1415:79;:::o;85:485:3:-;;;;;;;",
  "deployedSourceMap": "85:485:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:83:1;;;:::i;:::-;;;212:5;;;;;;;;;;198:19;;:10;:19;;;190:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;380:5:::1;::::0;::::1;;;;;;;;359:28;;;7:366:27::0;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:34;263:1;258:3;254:11;247:55;333:4;328:2;323:3;319:12;312:26;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:419::-;;583:2;572:9;568:18;560:26;;632:9;626:4;622:20;618:1;607:9;603:17;596:47;660:131;786:4;660:131;:::i;:::-;652:139;;550:248;;;:::o;804:169::-;;922:6;917:3;910:19;962:4;957:3;953:14;938:29;;900:73;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.8.0;\n\nimport './Faucet.sol';\n\ncontract Token2 is nortal {\n\n    Faucet _faucet;\n    \n    /*\n     在构造函数中增加一个入参，并且把这个入参转换成Faucet类型；\n     这样做是很危险的：\n     1、因为你不知道_f是不是指向Faucet合约的地址，里面有没有withdraw方法\n     2、你也不知道Faucet的withdraw方法是不是你想象的那种逻辑\n    */ \n    constructor(address _f) {\n        _faucet = Faucet(payable(_f));\n        _faucet.withdraw(0.1 ether);\n    }\n\n}",
  "sourcePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token2.sol",
  "ast": {
    "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token2.sol",
    "exportedSymbols": {
      "Faucet": [
        158
      ],
      "Token2": [
        387
      ],
      "nortal": [
        105
      ],
      "owned": [
        89
      ]
    },
    "id": 388,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 359,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:3"
      },
      {
        "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Faucet.sol",
        "file": "./Faucet.sol",
        "id": 360,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 159,
        "src": "61:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 361,
              "name": "nortal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 105,
              "src": "104:6:3"
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "104:6:3"
          }
        ],
        "contractDependencies": [
          89,
          105
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 387,
        "linearizedBaseContracts": [
          387,
          105,
          89
        ],
        "name": "Token2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 365,
            "mutability": "mutable",
            "name": "_faucet",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "118:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Faucet_$158",
              "typeString": "contract Faucet"
            },
            "typeName": {
              "id": 364,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 363,
                "name": "Faucet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 158,
                "src": "118:6:3"
              },
              "referencedDeclaration": 158,
              "src": "118:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Faucet_$158",
                "typeString": "contract Faucet"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "484:83:3",
              "statements": [
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 370,
                      "name": "_faucet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "494:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$158",
                        "typeString": "contract Faucet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 374,
                              "name": "_f",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "519:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "511:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 372,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "511:8:3",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "511:11:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 371,
                        "name": "Faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "504:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Faucet_$158_$",
                          "typeString": "type(contract Faucet)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "504:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$158",
                        "typeString": "contract Faucet"
                      }
                    },
                    "src": "494:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Faucet_$158",
                      "typeString": "contract Faucet"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "494:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:9:3",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 379,
                        "name": "_faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "533:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$158",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "533:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "533:27:3"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "_f",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "472:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:12:3"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:3"
            },
            "scope": 387,
            "src": "460:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 388,
        "src": "85:485:3"
      }
    ],
    "src": "36:534:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Token2.sol",
    "exportedSymbols": {
      "Faucet": [
        158
      ],
      "Token2": [
        387
      ],
      "nortal": [
        105
      ],
      "owned": [
        89
      ]
    },
    "id": 388,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 359,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:3"
      },
      {
        "absolutePath": "/Users/apple/code/open-source/my-projects/etherum/Faucet/contracts/Faucet.sol",
        "file": "./Faucet.sol",
        "id": 360,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 159,
        "src": "61:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 361,
              "name": "nortal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 105,
              "src": "104:6:3"
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "104:6:3"
          }
        ],
        "contractDependencies": [
          89,
          105
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 387,
        "linearizedBaseContracts": [
          387,
          105,
          89
        ],
        "name": "Token2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 365,
            "mutability": "mutable",
            "name": "_faucet",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "118:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Faucet_$158",
              "typeString": "contract Faucet"
            },
            "typeName": {
              "id": 364,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 363,
                "name": "Faucet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 158,
                "src": "118:6:3"
              },
              "referencedDeclaration": 158,
              "src": "118:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Faucet_$158",
                "typeString": "contract Faucet"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "484:83:3",
              "statements": [
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 370,
                      "name": "_faucet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "494:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$158",
                        "typeString": "contract Faucet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 374,
                              "name": "_f",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "519:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "511:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 372,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "511:8:3",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "511:11:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 371,
                        "name": "Faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "504:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Faucet_$158_$",
                          "typeString": "type(contract Faucet)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "504:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$158",
                        "typeString": "contract Faucet"
                      }
                    },
                    "src": "494:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Faucet_$158",
                      "typeString": "contract Faucet"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "494:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:9:3",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 379,
                        "name": "_faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "533:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$158",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "533:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "533:27:3"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "_f",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "472:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:12:3"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:3"
            },
            "scope": 387,
            "src": "460:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 388,
        "src": "85:485:3"
      }
    ],
    "src": "36:534:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-30T06:34:47.118Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}